1. Что такое система контроля версий, для чего ее используют?
Ответ: Система контроля версий — это программное обеспечение, которое позволяет отслеживать изменения в документах, при необходимости производить их откат, определять, кто и когда внес исправления и т.п. 
Система контроля версий позволяет комфортно работать как индивидуально, так и в коллективе.

2. Какой принцип хранения файлов использует Git?
Ответ: Каждый раз при сохранении данных в Git, система запоминает, как выглядит каждый файл в этот момент, и сохраняет ссылку на этот снимок. Git не запоминает файлы вновь, а только создаёт ссылку на предыдущую версию идентичного файла, который уже сохранен.

3. В каких трех основных состояниях файлы могут находиться в Git ?
Ответ: зафиксированном(файл уже сохранён в локальной базе), изменённом(файлы, которые поменялись, но ещё не были зафиксированы) и подготовленном(это изменённые файлы, отмеченные для включения в следующий коммит).

4. Что такое индексация файла? Какой командой она выполняется?
Ответ: Команда: git add

5. Что такое фиксация файла? Какой командой она выполняется?
Ответ: Фиксация файла - при каждой фиксации мы записываем снимок своего проекта, к которому можно будет вернуться в любой момент или использовать его для сравнения с текущим состоянием.
Команда: git commit

6. Продемонстрируйте команду проверки выбранных настроек.
Ответ: Команда: git config

7. Как инициализировать репозиторий в существующей папке?
Ответ: Чтобы начать слежение за существующим проектом, переходим в папку этого проекта и вводим команду git init

8. Как указать файлы, за которыми должна следить система?
Ответ: Командой git add [Имя файла].

9. Как выполнить фиксацию изменений?
Ответ: Команда: git commit

10. Какой командой определить состояния файлов?
Ответ: Командой git status

11. Для чего создается файл .gitignore?Поясните его структуру.
Ответ: Когда мы не хотим видеть некоторый класс файлов, который мы не хотим ни добавлять в репозиторий, ни видеть его в списке неотслеживаемых, то в подобных случаях создаётся файл .gitignore со списком соответствующих паттернов. Пример:
$ cat .gitignore
*. [oa]
*~
Первая строка заставляет Git игнорировать любые файлы, заканчивающиеся на «.o» или «.a», — объектные и архивные файлы, которые могут появляться в процессе сборки кода. Вторая строка предписывает игнорировать файлы, заканчивающиеся на тильду (~). 

12. Как используется команда git diff?
Ответ: Эта команда используется для вычисления разницы между любыми двумя Git  деревьями. 

13. Как используется команда git commit?
Ответ: Эта команда берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок во внутренней базе данных, а затем сдвигает указатель текущей ветки на этот слепок.

14. Как используется команда git log? Какие у нее есть параметры?
Ответ: Команда git log используется для отображения достижимой записанной истории проекта, начиная с самого свежего коммита. 

15. Как используется команда git commit –amend?
Ответ: Эта команда используется для изменения последнего совершённого коммита.

16. Как отобразить удаленные репозитории?
Ответ: Надо выполнить команду git remote. Она перечисляет список имён-сокращений для всех уже указанных удалённых дескриптеров. 

17. Как извлечь данные из удаленного репозитория?
Ответ: С помощью команды git fetch.

18. Как отправить данные в удаленный репозитроий?
Ответ: С помощью команды git push.

19. Продемонстируйте создание новых веток в Git? Что такое ветвление? Что такое указатель HEAD?
Ответ: Для создания новой ветки необходимо использовать команду git branch testing.
Ветвление (branching) означает отклонение от основной линии разработки, после которого работа перестает затрагивать эту самую основную линию. 
Указатель  HEAD указывает на локальную ветку, в которой вы находитесь в данный момент.

20. Как используется команда git checkout?
Ответ: Эта команда переставляет указатель в необходимую ветку.

21. Как выполнить включение изменений из одной ветки в другую?
Ответ: C помощью команды git push.

22. Какие проблемы могут быть при слиянии и как они разрешаются?
Ответ: Если мы внесли разные изменения в один и тот же файл, Git не сможет просто взять и объединить их.  Для разрешения конфликта следует или выбрать одну из версий, или каким-то образом объединить их. 

23. Что такое GitLab?
Ответ: Это сайт и система управления репозиториями кода для Git, из дополнительных возможностей: собственная вики и система отслеживания ошибок.
