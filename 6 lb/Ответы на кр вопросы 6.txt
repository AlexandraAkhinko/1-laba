Чем класс отличается от структуры? Структуры являются типами значений, а классы — ссылочными типами. Структура (struct) является типом значения. При создании структуры переменная, которой присвоена структура, содержит фактические данные этой структуры. Если структура присваивается новой переменной, все данные копируются. Таким образом, новая переменная и исходная переменная содержат две отдельные копии одинаковых данных. Изменения, внесенные в одну копию, не влияют на другую.

Что может и чего не может быть в структуре?

В объявлении структуры поля не могут быть инициализированы до тех пор, пока они будут объявлены как const или static.
Структура не может объявлять используемый по умолчанию конструктор (конструктор без параметров) или метод завершения.
Структуры могут объявлять конструкторы, имеющие параметры.
Структура не может наследовать от другой структуры или класса и не может быть базовой для класса.
Структуры могут реализовывать интерфейсы.
Структура может использоваться как тип, допускающий значение NULL, и ей можно назначить значение NULL.
Что такое перечисление? Приведите пример определения и использования перечисления Перечисление (enumeration) — это определяемый пользователем целочисленный тип. Когда вы объявляете перечисление, то специфицируете набор допустимых значений, которые могут принимать экземпляры перечислений. Но мало того — этим значениям еще должны быть присвоены имена, понятные для пользователей. Если где-то в коде попытаться присвоить экземпляру перечисления значение, не входящее в список допустимых, компилятор выдаст ошибку. enum Days { Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday }

Перечислите и поясните стандартные интерфейсы .Net? Интерфейс IComparable задает метод сравнения объектов по принципу больше или меньше, что позволяет выполнять их сортировку. Реализация интерфейсов IEnumerable и IEnumerator дает возможность просматривать содержимое объекта с помощью конструкции foreach, а реализация интерфейса ICloneable – клонировать объекты.

Как используется интерфейс IComparable? Предоставляет метод для сравнения двух объектов определенного типа является роль IComparable . Это необходимо в том случае, если нужно предоставить все возможности сортировки для объекта. Рассматривайте как порядок сортировки по умолчанию для объектов IComparable . Например если массив объектов этого типа, и вызвать метод сортировки для этого массива, IComparable предоставляет сравнения объектов во время сортировки. При реализации интерфейса IComparable , необходимо реализовать метод CompareTo следующим образом: // Implement IComparable CompareTo method - provide default sort order. int IComparable.CompareTo(object obj) { car c=(car)obj; return String.Compare(this.make,c.make); }

Как используется интерфейс ICloneable?
ICloneable нужен для клонирования объектов. class Person : ICloneable { public string Name { get; set; } public int Age { get; set; } public object Clone() { return new Person { Name = this.Name, Age = this.Age }; } }

Что такое полиморфизм? Перечислите его формы. Приведите примеры. Полиморфизм — это способность обьекта использовать методы производного класса, который не существует на момент создания базового. Основные разновидности полиморфизма Ad hoc полиморфизм Параметрический полиморфизм Полиморфизм подтипов Классы типов Обобщённые алгебраические типы данных Политипизм.

Зачем в классе определяют виртуальные методы? Для того, чтобы могли переопределить их в классах наследниках. И таким образом использовать полиморфизм.

Как сделать запрет переопределения методов? Не делать метод виртуальным.